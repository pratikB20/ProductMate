@model ProductMate.Models.UserRole;
<!--Import Layout in every page.-->
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--Form Heading Section-->
<h3 class="uk-heading-line uk-text-center"><span>New Role</span></h3>

<!--Form Section-->
<div class="uk-grid-column-small uk-grid-row-small uk-child-width-1-2@s uk-child-width-1-3@s uk-child-width-1-4@s" uk-grid>
    <div class="uk-flex-column">
        @Html.Label("Role Name")
        @Html.TextBoxFor(m => m.strRoleName, new { @class = "uk-input uk-form-small", @id = "txtRoleName" })
    </div>
    <div class="uk-flex-column">
        @Html.Label("Description")
        @Html.TextAreaFor(m => m.strDescription, new { @class = "uk-input uk-form-small", @id = "txtDescription" })
    </div>
</div>

<!--Button Section-->
<div class="uk-margin">
    <button class="uk-button uk-button-primary uk-button-small uk-margin-small-left uk-margin-small-right"
            id="btnSubmit">
        Submit
    </button>
    <button class="uk-button uk-button-danger uk-button-small uk-margin-small-left uk-margin-small-right"
            id="btnReset">
        Reset
    </button>
</div>

<script type="text/javascript">

    $(document).ready(function () {
    });

    $("#btnSubmit").click(function () {
        try {
            var clsUserRole = {
                strRoleName : $("#txtRoleName").val(),
                strDescription : $("#txtDescription").val()
            };
            console.log(clsUserRole);
            var IsValid = validateInputs(clsUserRole);

            if (IsValid) {
                $.ajax({
                    contentType: "application/x-www-form-urlencoded",
                    async: false,
                    type: "POST",
                    dataType: "json",
                    data: { "clsUserRole": clsUserRole },
                    url: '@Url.Action("SaveUserRole", "NewRole")', //Depending on Save/Update, sending data to appropriate request
                    success: function (data) {
                        if (data.message == "OK") {
                                UIkit.modal.alert("User Added Successfully!");
                        }
                        else {
                            UIkit.modal.alert("User not added into the system due to technical error");
                        }
                    },
                    error: function (data) { alert("Error-Something bad happened."); }
                });
            }
        }
        catch (ex) {
            throw ex;
        }
    });

    const validateInputs = (clsUserRole) => {
        var IsValid = true;
        //Empty data Validations
        if (clsUserRole.strRoleName == "") {
            UIkit.modal.alert("Role name is mandatory!");
            IsValid = false;
        }
        else if (clsUserRole.strDescription == "") {
            UIkit.modal.alert("Description is mandatory!");
            IsValid = false;
        }
        else {
            IsValid = true;
        }

        return IsValid;
    }
</script>