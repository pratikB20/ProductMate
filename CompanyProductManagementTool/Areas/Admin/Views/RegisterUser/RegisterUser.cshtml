@model ProductMate.Models.Users;

<!--Import Layout in every page.-->
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    if (ViewBag.strFirstName == null)
    {
        ViewBag.strFirstName = "";
    }
    if (ViewBag.strLastName == null)
    {
        ViewBag.strLastName = "";
    }
    if (ViewBag.strContact == null)
    {
        ViewBag.strContact = "";
    }
    if (ViewBag.strEmailId == null)
    {
        ViewBag.strEmailId = "";
    }
    if (ViewBag.strUsername == null)
    {
        ViewBag.strUsername = "";
    }
    if (ViewBag.strPassword == null)
    {
        ViewBag.strPassword = "";
    }
    if (ViewBag.intOrganisationId == null) {
        ViewBag.intOrganisationId = 0; //Default first dropdown value selection set
    }
    if (ViewBag.intUserRoleId == null) {
        ViewBag.intUserRoleId = 0; //Default first dropdown value selection set
    }
    if (ViewBag.intStatus == null) {
        ViewBag.intStatus = 0; //Default first dropdown value selection set
    }
}

<!--Form Heading Section-->
<h3 class="uk-heading-line uk-text-center"><span>Register User</span></h3>

<!--Form Section-->
<div class="uk-grid-column-small uk-grid-row-small uk-child-width-1-2@s uk-child-width-1-3@s uk-child-width-1-4@s" uk-grid>
    <div class="uk-flex-column">
        @Html.Label("First Name")
        @Html.TextBoxFor(m => m.strFirstName, new { @class = "uk-input uk-form-small", @id = "txtFirstName" })
    </div>
    <div class="uk-flex-column">
        @Html.Label("Last Name")
        @Html.TextBoxFor(m => m.strLastName, new { @class = "uk-input uk-form-small", @id = "txtLastName" })
    </div>
    <div class="uk-flex-column">
        @Html.Label("Contact")
        @Html.TextBoxFor(m => m.strContact, new { @class = "uk-input uk-form-small", @id = "txtContact" })
    </div>
    <div class="uk-flex-column">
        @Html.Label("Email ID")
        @Html.TextBoxFor(m => m.strEmailId, new { @class = "uk-input uk-form-small", @id = "txtEmailID" })
    </div>
    <div class="uk-flex-column">
        @Html.Label("Username")
        @Html.TextBoxFor(m => m.strUsername, new { @class = "uk-input uk-form-small", @id = "txtUsername" })
    </div>
    <div class="uk-flex-column">
        @Html.Label("Password")
        @Html.PasswordFor(m => m.strPassword, new { @class = "uk-input uk-form-small", @id = "txtPassword" })
    </div>
    <div class="uk-flex-column">
        @Html.Label("Organisation")
        <div class="uk-form-controls">
            @Html.DropDownList("ddlOrganisation", ViewBag.ddlOrganisation, "Select Organisation", new { @class = "uk-select uk-form-small", @id = "ddlOrganisation" })
        </div>
    </div>
    <div class="uk-flex-column">
        @Html.Label("User Role")
        <div class="uk-form-controls">
            @Html.DropDownList("ddlUserRole", ViewBag.ddlUserRole, "Select User Role", new { @class = "uk-select uk-form-small", @id = "ddlUserRole" })
        </div>
    </div>
    <div class="uk-flex-column">
        @Html.Label("Status")
        <div class="uk-form-controls">
            @Html.DropDownList("ddlStatus", new List<SelectListItem>
            {
                new SelectListItem { Text="Active", Value="1" },
                new SelectListItem { Text="Inactive", Value="0" }
            } , "Select Status", new { @class = "uk-select uk-form-small", @id = "ddlStatus" })
        </div>
    </div>
</div>

<!--Button Section-->
<div class="uk-margin">
    <button 
        class="uk-button uk-button-primary uk-button-small uk-margin-small-left uk-margin-small-right"
        id="btnSubmit">
        Submit
    </button>
    <button 
        class="uk-button uk-button-danger uk-button-small uk-margin-small-left uk-margin-small-right"
        id="btnReset">
        Reset
    </button>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        var ACTION = '@TempData["ACTION"]';
        console.log(ACTION);
        if (ACTION === "Save") {
            $("#btnSubmit").html('Save');
            console.log("Hitting Save Section");
        }
        else if (ACTION === "Update") {
            $("#btnSubmit").html('Update');
            $("#btnReset").html('Back to list');
            //Set user details to update

            console.log("Hitting Update Section");

            $("#txtFirstName").val("@ViewBag.strFirstName");
            $("#txtLastName").val("@ViewBag.strLastName");
            $("#txtContact").val("@ViewBag.strContact");
            $("#txtEmailID").val("@ViewBag.strEmailId");
            $("#txtUsername").val("@ViewBag.strUsername");
            $("#txtPassword").val("@ViewBag.strPassword");
            $("#ddlOrganisation").val("@ViewBag.intOrganisationId").change();
            $("#ddlUserRole").val("@ViewBag.intUserRoleId").change();
            $("#ddlStatus").val("@ViewBag.intStatus").change();

        }
        else {
        }
    });

    $("#btnSubmit").click(function () {
        var clsUsers = {
            strFirstName : $("#txtFirstName").val(),
            strLastName : $("#txtLastName").val(),
            strContact : $("#txtContact").val(),
            strEmailId : $("#txtEmailID").val(),
            strUsername : $("#txtUsername").val(),
            strPassword : $("#txtPassword").val(),
            intOrganisationId : $("#ddlOrganisation option:selected").val(),
            intUserRoleId : $("#ddlUserRole option:selected").val(),
            intStatus : $("#ddlStatus option:selected").val()
        };

        var ACTION = '@TempData["ACTION"]';
        var URL;
        //console.log(ACTION);
        if (ACTION === "Save") {
            URL = '@Url.Action("SaveUser","RegisterUser")';
        } else if (ACTION === "Update") {
            URL = '@Url.Action("UpdateSelectedUsers", "RegisterUser")';
        }
        else {
            URL = "";
        }
        console.table([URL, clsUsers]);
        var IsValid = validateInputs(clsUsers);

        if (IsValid) {
            $.ajax({
                    contentType: "application/x-www-form-urlencoded",
                    async: false,
                    type: "POST",
                    dataType: "json",
                    data: { "clsUsers": clsUsers },
                    //url: '@Url.Action("SaveUser","RegisterUser")', //Depending on Save/Update, sending data to appropriate request
                    url: URL,
                    success: function (data) {
                        if (data.message == "OK") {
                            if (ACTION === "Save") {
                                UIkit.modal.alert("User Added Successfully!");
                            } else if (ACTION === "Update") {
                                UIkit.modal.alert("User Updated Successfully!");
                            }
                            else {
                                UIkit.modal.alert("No Action Happened!");
                            }
                        }
                        else {
                            UIkit.modal.alert("User not added into the system due to technical error");
                        }
                    },
                    error: function (data) { alert("Error-Something bad happened."); }
                });
        }
    });

    $("#btnReset").click(function () {
        if ($("#btnReset").text === "RESET") {
            window.location.href = '@Url.Action("RegisterUser", "RegisterUser")';
        }
        else if ($("#btnReset").text === "BACK TO LIST") {
            window.location.href = '@Url.Action("UserList", "UserList")';
        }
        else {

        }
    });

    function validateInputs(clsUsers) {

        var IsValid = true;

        //Empty data Validations
        if (clsUsers.strFirstName == "") {
            UIkit.modal.alert("First name is mandatory!");
            IsValid = false;
        }
        else if (clsUsers.strLastName == "") {
            UIkit.modal.alert("Last name is mandatory!");
            IsValid = false;
        }
        else if (clsUsers.strContact == "") {
            UIkit.modal.alert("Contact is mandatory!");
            IsValid = false;
        }
        else if (clsUsers.strEmailId == "") {
            UIkit.modal.alert("Email ID is mandatory!");
            IsValid = false;
        }
        else if (clsUsers.strUsername == "") {
            UIkit.modal.alert("Username is mandatory!");
            IsValid = false;
        }
        else if (clsUsers.strPassword == "") {
            UIkit.modal.alert("Password is mandatory!");
            IsValid = false;
        }
        else if (clsUsers.intOrganisationId == "") {
            UIkit.modal.alert("Organisation is mandatory!");
            IsValid = false;
        }
        else if (clsUsers.intUserRoleId == "") {
            UIkit.modal.alert("User Role is mandatory!");
            IsValid = false;
        }
        else if (clsUsers.blnStatus == "") {
            UIkit.modal.alert("Status is mandatory!");
            IsValid = false;
        }
        else {
            IsValid = true;
        }


        //Custom Validations
        //Will keep this pending for javascript practice.

        return IsValid;
    }
</script>
