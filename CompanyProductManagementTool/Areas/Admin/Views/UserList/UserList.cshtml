<!--Import Layout in every page.-->
@model IEnumerable<ProductMate.Areas.Admin.Models.UserListGrid>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="./ApplevelCSS/UserList_CSS.css" />

<!--Form Heading Section-->
<h3 class="uk-heading-line uk-text-center"><span>User List</span></h3>

<!--Button Section-->
<hr class="uk-divider-icon">
<div class="uk-margin">
    <button class="uk-button uk-button-primary uk-button-small uk-margin-small-left uk-margin-small-right"
            id="btnEdit" uk-toggle="target: #modal-example">
        Edit
    </button>
    <button class="uk-button uk-button-danger uk-button-small uk-margin-small-left uk-margin-small-right"
            id="btnDelete">
        Delete
    </button>
</div>

<!--Edit Users Popup-->
<!---------------------------------------------------------------------------------------------------------------------------------------->
<!-- This is the modal -->
<div id="modal-example" uk-modal>
    <div class="uk-modal-dialog uk-modal-body">
        <h2 class="uk-modal-title">Headline</h2>
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
        <p class="uk-text-right">
            <button class="uk-button uk-button-default uk-modal-close" type="button">Cancel</button>
            <button class="uk-button uk-button-primary" type="button">Save</button>
        </p>
    </div>
</div>


<!---------------------------------------------------------------------------------------------------------------------------------------->


<hr class="uk-divider-icon">

<!--Table Section-->
<div id="tblUsersList">
    <table id="UsersList">
        <thead>
            <tr>
                <th><!--Checkbox--></th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Contact</th>
                <th>Email ID</th>
                <th>Username</th>
                <th>Create Date</th>
                <th>Created By</th>
                <th>Organisation</th>
                <th>User Role</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                if (Model.Count() != 0)
                {
                    foreach (var clsUserListGrid in Model)
                    {
                        <tr>
                            <td><input type="checkbox" class="uk-checkbox" id="chkUsersId" name="checkBox" value="@clsUserListGrid.intUsersId" /></td>
                            <td>@clsUserListGrid.strFirstName</td>
                            <td>@clsUserListGrid.strLastName</td>
                            <td>@clsUserListGrid.strContact</td>
                            <td>@clsUserListGrid.strEmailId</td>
                            <td>@clsUserListGrid.strUsername</td>
                            <td>@clsUserListGrid.dteCreateDate</td>
                            <td>@clsUserListGrid.strCreatedBy</td>
                            <td>@clsUserListGrid.strOrganisation</td>
                            <td>@clsUserListGrid.strUserRole</td>
                            <td>@clsUserListGrid.strStatus</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td rowspan="10">Currently no users present</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>


<script type="text/javascript">

    //Common function to select single checkbox at a time.
    $("input:checkbox").on('click', function () {
        // in the handler, 'this' refers to the box clicked on
        var $box = $(this);
        if ($box.is(":checked")) {
            // the name of the box is retrieved using the .attr() method
            // as it is assumed and expected to be immutable
            var group = "input:checkbox[name='" + $box.attr("name") + "']";
            // the checked state of the group/box on the other hand will change
            // and the current value is retrieved using .prop() method
            $(group).prop("checked", false);
            $box.prop("checked", true);
        } else {
            $box.prop("checked", false);
        }
    });

    $("#btnDelete").click(function () {
        try {
            var intUserID = $("#UsersList td :checkbox:checked").val();
            var UserConfirmation = false;
            if (intUserID > 0) {

                /*UserConfirmation = confirm("Are you sure you want to delete the user?");*/

                UIkit.modal.confirm('Are you sure you want to delete the user?').then(function () {
                    $.ajax({
                        contentType: "application/x-www-form-urlencoded",
                        async: false,
                        type: "POST",
                        dataType: "json",
                        data: { "intUserID": intUserID },
                        url: '@Url.Action("DeleteUser","UserList")',
                        success: function (data) {
                            if (data.message == "OK") {
                                UIkit.modal.alert("User Deleted Successfully!");
                                window.location.href = '@Url.Action("UserList", "UserList")';
                            }
                            else {
                                UIkit.modal.alert("User not deleted into the system due to technical error");
                            }
                        },
                        error: function (data) { alert("Error-Something bad happened."); }
                    });
                }, function () {
                    console.log('Delete Rejected')
                });
            }
            else {
                UIkit.modal.alert("No User Present In The Grid");
            }

        }
        catch (ex) {
            throw ex;
        }
    });
</script>